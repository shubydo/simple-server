---
name: Pull Request

on:
  pull_request:
    branches:
      - main

env:
  GO_VERSION: "1.20.2"

defaults:
  run:
    shell: bash

# Lint, run go tests, and build the binary
jobs:
  lint:
    # Use the same name as the job in .github/lint_template.yml
    name: Lint
    uses: ./.github/workflows/lint_template.yml
    with:
      go-version: ${{ env.GO_VERSION }}
      golangci-lint-version: "latest"

  # Check if unused dependencies are present using go mod tidy -v
  tidy:
    name: Tidy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: "Set up Go ${{ env.GO_VERSION }}"
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Check go dependencies
        run: make tidy

      - name: Check if module was tidy
        run: |
          # Check if there are any changes to the go.mod and go.sum files
          if [[ -n "$(git status --porcelain go.mod go.sum)" ]]; then
            echo "go.mod and/or go.sum were not tidy. Please run 'go mod tidy -v' and commit the changes."
            exit 1
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: "Set up Go ${{ env.GO_VERSION }}"
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Install Go dependencies
        run: make tidy

      # Run go tests
      - name: Test
        run: make test


      # # Run go tests and post coverage as a comment
      # - name: Test
      #   uses: codecov/codecov-action@v2
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     fail_ci_if_error: true
      #     verbose: true
  

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: "Set up Go ${{ env.GO_VERSION }}"
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

          
      # Build the binary
      - name: Build
        run: make build
